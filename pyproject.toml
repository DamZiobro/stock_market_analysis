[tool.poetry]
name = "stock_market_analysis"
version = "0.0.1"
description = "Pipeline of tools helpful for stock market historical analysis"
authors = ["Damian Ziobro <damian@xmementoit.com>"]

[tool.poetry.dependencies]
python = "^3.10"
click = "^8.1.3"
pydantic = "^2.7.1"
yfinance = "^0.2.38"
pandas = "^2.2.2"
tabulate = "^0.9.0"
types-tabulate = "^0.9.0"
s3fs = "^2024.3.1"
joblib = "^1.4.2"
ta = "^0.11.0"

[tool.poetry.dev-dependencies]
pytest = "^6.2.5"
pytest-cov = "^3.0.0"
mkdocs = "^1.4.2"
mkdocstrings = {extras = ["python"], version = "^0.20.0"}
mkautodoc = "^0.2.0"
mkdocs-material = "^9.0.12"
mkdocs-swagger-ui-tag = "^0.5.2"
flake8-mypy = "^17.8.0"
ruff = "^0.0.286"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
stock-market-analysis = "stock_market_analysis.main:main"

[tool.ruff]
line-length = 100  # defaults to 88 like black

select = [
  "E",   # pycodestyle
  "W",   # pycodestyle warnings
  "F",   # pyflakes
  "UP",  # pyupgrade,
  "I",   # isort
  "N",   # pep8-naming
  "C90", # mccabe
  "D",   # pydocstyle
  "ANN",   # flake8-annotation
  "ASYNC",   # flake8-async
  "S",   # flake8-bandit
  "B",   # flake8-bugbear
  "C4",   # flake8-comperhensions
  "DTZ",   # flake8-datetimez
  "EM",   # flake8-errmsg
  "EXE",   # flake8-executable
  "G",   # flake8-logging-format
  "PIE",   # flake8-pie
  "PYI",   # flake8-pyi
  "PT",   # flake8-pytest-style
  "Q",   # flake8-quotes
  "RET",   # flake8-return
  "SLF",   # flake8-self
  "SLOT",   # flake8-slots
  "SIM",   # flake8-simplify
  "TID",   # flake8-tidy-imports
  "TCH",   # flake8-type-checking
  "ARG",   # flake8-unused-arguments
  "PTH",   # flake8-use-pathlib
  "TD",   # flake8-todos
  "PL",   # flake8-pylint
  "RUF",   # ruff-specific rules
  "PD",   # pandas-vet
]

ignore = ["D203", "D213", "ANN201"]

[tool.ruff.per-file-ignores]
"*" = ["D417", "PD901"]
"tests/*" = ["S101", "D103", "ANN201", "D100"]

# if you want to configure a particular plugin, you can do it in
# a subsection, it is usually the same configuration that the plugin
# supports
[tool.ruff.isort]

section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder"
]

# Number of blank lines to separate imports from following statements.
lines-after-imports = 2

# Package names that are known for the ‘FIRSTPARTY’ section.
known-first-party = ["dput"]

detect-same-package = true
